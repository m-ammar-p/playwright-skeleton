name: Develop Tests PR

on:
  pull_request:
    branches:
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Clean Workspace
      - name: Clean Workspace
        run: mvn clean

      # Step 4: Run Develop Tests
      - name: Run Develop Tests
        run: mvn test -Pdev -D"cucumber.filter.tags=@develop"

      # Step 5: Verify Allure Results
      - name: Check Allure Results
        run: |
          echo "Checking allure-results folder contents:"
          ls -R target/allure-results || echo "No allure-results folder found"

      # Step 6: Upload Allure Results
      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results/**

      # Step 7: Upload Test Report Artifacts
      - name: Upload Test Report Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: target/surefire-reports/*.xml

  generate_report:
    name: Generate Test Results
    runs-on: ubuntu-latest
    if: always()
    needs: [ tests ]

    steps:
      # Step 1: Checkout code to get the POM
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1.1: Compute subfolder (pr/<branch>)
      - name: Prepare publish key
        id: prep
        shell: bash
        run: |
          BRANCH="${GITHUB_HEAD_REF//\//-}"
          echo "subdir=pr/$BRANCH" >> $GITHUB_OUTPUT

      # Step 1.2: Pull previous history from gh-pages/<subdir>/history
      - name: Get previous Allure history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: Copy history into new results
        run: |
          mkdir -p target/allure-results/history
          cp -r "gh-pages/${{ steps.prep.outputs.subdir }}/history/"* target/allure-results/history/ 2>/dev/null || true

      # Step 2: Download Allure Results
      - name: Download Allure Results
        uses: actions/download-artifact@v4
        id: download-allure
        with:
          name: allure-results
          path: target/allure-results

      # Step 3: Generate Allure Report
      - name: Generate Allure Report
        run: mvn allure:report

      # Step 4: Copy Allure Results to Publish Directory
      - name: Copy Allure Results to Publish Directory
        run: cp -r target/allure-results target/site/allure-maven-plugin/allure-results

      # Step 5: Deploy Allure Report (to gh-pages under /pr/<branch>)
      - name: Deploy Allure Report
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: target/site/allure-maven-plugin
          destination_dir: ${{ steps.prep.outputs.subdir }}
          keep_files: true
          disable_nojekyll: true

      # Step 6: Upload Allure Results for Server
      - name: Upload Allure Results for Server
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-for-server
          path: target/allure-results